#####################################################################
# 	Macros
#####################################################################

[z_tilt]
##	Use Z_TILT_ADJUST to level the bed .
##	z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 300mm build
z_positions:
	-46, 20
	150, 338
	346, 20
points:
	30, 5
	150, 245
	270, 5

speed: 200
horizontal_move_z: 15 #distance it moves away from bed before probing
retries: 5
retry_tolerance: 0.0075

## Bed mesh settings for quickdraw
[bed_mesh]
speed: 300
horizontal_move_z: 3

mesh_min: 40, 40
mesh_max: 260,260

fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 24
##--------------------------------------------------------------------

speed: 250
horizontal_move_z: 5


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(110)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    {% set SOAK_TIME = params.SOAK_TIME|default(20)|int %}
    {% set BED_MESH = params.BED_MESH|default(1)|int %}
    {% set EXTRUDE = params.EXTRUDE|default(0)|int %}
    {% set PALETTE = params.PALETTE|default(0)|int %}

    M104 S120
    M140 S{BED_TEMP}

    G28
    
    {% if EXTRUDE|int == 1 %}
        M109 S215
        G1 E50 F180
        M109 S120
    {% endif %}

    M190 S{BED_TEMP}

    {% if SOAK_TIME > 0 %}
        PRE_SOAK SOAK_TIME={SOAK_TIME}
    {% endif %}

    PERFORM_DOCK_ACTION dock_action=undock
	
    Z_TILT_QUICKDRAW

    {% if BED_MESH|int == 1 %}
        LOG_INFO message="Loading or creating bed mesh for: {BED_TEMP}C"
        {% if SOAK_TIME > 19 %}
            BED_MESH_LOAD_TEMP TEMP={BED_TEMP}
        {% else %}
            BED_MESH_LOAD_TEMP TEMP={BED_TEMP} WAIT_TIME={SOAK_TIME}
        {% endif %}
    {% else %}
        BED_MESH_CLEAR
    {% endif %}

    G0 X150 Y5 Z60    ;Give the peasant time to manually clean nozzle
    G4 P60000         ;Wait 60 seconds

	CALIBRATE_Z
	
    #PERFORM_DOCK_ACTION dock_action=dock
    
    G92 E0;    
    G90   
    G0 X5 Y5 F6000    
    M109 S{EXTRUDER_TEMP}

    {% if PALETTE|int == 0 %}
        G0 Z0.4
        G91
        G1 X120 E30 F1200;
        G1 Y1
        G1 X-120 E30 F1200;
        G1 E-1 F2100; Retract Before Printing
        G92 E0;
        G1 F9000
        M117 Printing.. 
    {% endif %}

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    #G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F4800   ; park nozzle at rear
	FILTER_PAST_PRINT_END
    M117 Finished!
	
[gcode_macro PERFORM_DOCK_ACTION]
gcode:
    LOG_INFO message="Performing docking action with action: {params.DOCK_ACTION}"
    QUERY_PROBE
    {% if params.DOCK_ACTION == 'dock' %}
        PROBE_DOCK
        QUERY_PROBE
        VERIFY_PROBE_ACTION ACTION=dock
    {% elif params.DOCK_ACTION == 'undock' %}
        PROBE_UNDOCK
        QUERY_PROBE
        VERIFY_PROBE_ACTION ACTION=undock
    {% endif %}

[gcode_macro PROBE_UNDOCK]
gcode:
    LOG_INFO message="Undocking Probe"
    SAVE_GCODE_STATE name=_undockProbe
    SET_GCODE_OFFSET Z=0
    G0 X150 Y150 F10000
    G1 Z25 F1800
    G1 X93 F3600
    G1 Y300 F1800
    G1 Y150 F3600
    G0 X150 Y150 F10000
    RESTORE_GCODE_STATE name=_undockProbe

[gcode_macro PROBE_DOCK]
gcode:
    LOG_INFO message="Docking Probe"
    SAVE_GCODE_STATE name=_dockProbe
    SET_GCODE_OFFSET Z=0
    G0 X150 Y150 F10000
    G1 Z25 F1800
    G1 X93 F3600
    G1 Y300 F3600
    G1 X150 F3600   
    G0 X150 Y150 F10000
    RESTORE_GCODE_STATE name=_dockProbe

[gcode_macro VERIFY_PROBE_ACTION]
gcode:
    {% set triggered = printer.probe.last_query %}                   ;1 = triggered 0 = open aka attached
    # check if probe fails to attach/detach
    {% if not triggered %}
        {% if params.ACTION == 'dock' %}
            { action_raise_error("Probe dock failed!") }
        {% elif params.ACTION == 'undock' %} 
            LOG_INFO message="Probe undock successful"
        {% endif %}
    {% elif triggered %}
        {% if params.ACTION == 'undock' %}
            { action_raise_error("Probe undock failed!") }
        {% elif params.ACTION == 'dock' %}
            LOG_INFO message="Probe dock successful"
        {% endif %}
    {% endif %}

[output_pin blacklight ]
##  Chamber Lighting - In BED OUT Position
pin: HE3
pwm: false
#cycle_time: 0.01
shutdown_value: 0
value:1.0


[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 24

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    G28
    M117 Z-Calibration.
    _SET_LOWER_STEPPER_CURRENT 
    PERFORM_DOCK_ACTION dock_action=undock  
    BASE_CALIBRATE_Z
    _RESET_STEPPER_CURRENT      # resetting the stepper current
    G0 Z10 F6000        ;Move up to avoid trigger
    PERFORM_DOCK_ACTION dock_action=dock   
    M117 Z-Calibration Complete.

[gcode_macro Z_TILT_QUICKDRAW]
gcode:
    g28
    PERFORM_DOCK_ACTION dock_action=undock
    Z_TILT_ADJUST
    PERFORM_DOCK_ACTION dock_action=dock

[gcode_macro PRE_SOAK]
gcode:
    {% set SOAK_TIME = params.SOAK_TIME|default(20)|int %}
    M117 Starting Soak
    M106 S255 #Turn on PF to help warm up chamber
    G0 X150 Y150 Z10 F6000
    {% for timer in range( SOAK_TIME|int,0,-1) %}
        #we cycle once a minute, so we can send an update to keep octoprint happy, rather than just sleeping for the entire soak
        M117 Soak: {timer|int}m remaining
        M105
        G4 P60000
    {% endfor %}
   M107
   M117 Soak Complete      

[gcode_macro BED_MESH_TEMP]
gcode:
    {% set TEMP = params.TEMP|default(110)|int %}
    {% set FORCE = params.FORCE|default(0)|int %}
    {% set WAIT_TIME = params.WAIT_TIME|default(60)|int %}
    
    {% if TEMP|int < 30 %}
        {action_respond_info("TEMP is a required parameter!")}
    {% else %}
        {% if printer.configfile.config["bed_mesh temp_" + TEMP|string] is not defined or FORCE|int == 1 %}
            LOG_INFO message="No bed mesh found for temp: {TEMP}C generating one now."
            LOG_INFO message="Being forced? {FORCE}"
            M190 S{TEMP}           ; wait for bed temp
            ; Run QGL/home at new temp, both to validate we're still leveled at the new
            ; temp, but also to give the temp a bit to soak.
            {% for timer in range( WAIT_TIME|int,0,-1) %}
                M117 Soak: {timer|int}m remaining
                M105
                G4 P60000
            {% endfor %}
            G32
            BED_MESH_CLEAR
            PERFORM_DOCK_ACTION dock_action=undock
            M106 S255           ;Turn on PF to keep probe cool
            BED_MESH_CALIBRATE
            M107                ;Turn that fan off!
            PERFORM_DOCK_ACTION dock_action=dock
            BED_MESH_PROFILE SAVE=temp_{TEMP}
            SAVE_CONFIG
        {% endif %}
    {% endif %}

[gcode_macro BED_MESH_LOAD_TEMP]
gcode:
    {% set TEMP = params.TEMP|default(110)|int %}
    {% set FORCE = params.FORCE|default(0)|int %}
    {% set WAIT_TIME = params.WAIT_TIME|default(0)|int %}
    BED_MESH_TEMP TEMP={TEMP} FORCE={FORCE} WAIT_TIME={WAIT_TIME}
    BED_MESH_PROFILE LOAD=temp_{TEMP}
    
[gcode_macro LOG_INFO]
gcode:
  {% set MESSAGE = params.MESSAGE|default('')|string %}
  {action_respond_info(params.MESSAGE)}

[gcode_macro _SET_LOWER_STEPPER_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.5
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.5

[gcode_macro _RESET_STEPPER_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer.configfile.config["tmc2209 stepper_z"]["run_current"]} HOLDCURRENT={ printer.configfile.config["tmc2209 stepper_z"]["hold_current"]}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer.configfile.config["tmc2209 stepper_z1"]["run_current"]} HOLDCURRENT={ printer.configfile.config["tmc2209 stepper_z"]["hold_current"]}

[gcode_macro FILTER_PAST_PRINT_END]
gcode:
    G4 S600
    SET_FAN_SPEED FAN=nevermore SPEED=0
    LOG_INFO message="Filter fan now off"
	
[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro PALETTE_START_ABS]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=215
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
    G1 z25 F600
    G1 X150 F7800
    G1 Y10 F7800

[gcode_macro PALETTE_START_PLA]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    G1 z25 F600
    G1 X150 F7800
    G1 Y10 F7800

[gcode_macro FRONT_CENTER]
gcode:
    G1 z25 F600
    G1 X150 F7800
    G1 Y10 F7800
	
################## PA TUNING ######################################
[gcode_macro PA_TUNE]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
    
[gcode_macro EJECT_FILAMENT]
gcode:
    G1 E10 F300
    G1 E-120 F2400

[gcode_macro PALETTE_START_ABS]
gcode:
    G28
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=215
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
    G1 z25 F600
    G1 X150 F7800
    G1 Y10 F7800

[gcode_macro PALETTE_START_PLA]
gcode:
    G28
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    G1 z25 F600
    G1 X150 F7800
    G1 Y10 F7800

